#server.port = 28080
server.port = 8080

logging.level.root=INFO
logging.level.org.springframework=INFO

#spring.datasource.url=jdbc:postgresql://localhost:25432/test_db_2
spring.datasource.url=jdbc:postgresql://postgres_2:5432/test_db_2
spring.datasource.username=postgres
spring.datasource.password=secret
spring.datasource.tomcat.test-on-borrow=true
spring.datasource.tomcat.validation-query=SELECT 1
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL95Dialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.show-sql=true

#Kafka settings
spring.cloud.stream.kafka.binder.brokers=kafka:9092
#spring.cloud.stream.kafka.binder.brokers=localhost:19092
spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer
#Kafka consumers settings
#spring.cloud.stream.bindings.contactChangeEvents.destination=contacts
#spring.cloud.stream.bindings.contactChangeEvents.contentType=application/json
#spring.cloud.stream.bindings.contactChangeEvents.group=future-positions
#spring.cloud.stream.bindings.contactNameChangeEvents.destination=contact_names
#spring.cloud.stream.bindings.contactNameChangeEvents.contentType=application/json
#spring.cloud.stream.bindings.contactNameChangeEvents.group=future-positions

debug=true

logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG


